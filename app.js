const DEFAULT_REPO='https://github.com/';const STORAGE_KEY='tus_profiles_v1';
const app={data:{questions:[],info:[]},users:{},user:null,get profile(){return this.user?this.users[this.user]:null;}};
function byId(id){return document.getElementById(id)}function setHidden(el,hide){el.classList.toggle('hidden',!!hide)}
function loadAll(){const saved=JSON.parse(localStorage.getItem(STORAGE_KEY)||'{"users":{}}');app.users=saved.users||{};byId('gh-link').href=DEFAULT_REPO}
function saveAll(){localStorage.setItem(STORAGE_KEY,JSON.stringify({users:app.users}))}
function ensureUser(name){if(!app.users[name]){app.users[name]={stats:{total:0,correct:0,streak:0,cats:{}},wrongIds:[],seenQ:[],seenI:[],};}
app.user=name;saveAll();byId('current-user').textContent=name;refreshStats()}
function promptUser(){const dlg=byId('user-modal');dlg.showModal();byId('user-save').onclick=(e)=>{const name=byId('username-input').value.trim();if(!name)return;ensureUser(name);dlg.close();}}
async function loadData(){const q=await fetch('data/questions.json').then(r=>r.json());app.data=q;fillCategorySelect()}
function fillCategorySelect(){const sel=byId('category');sel.innerHTML='';const cats=[...new Set(app.data.questions.map(x=>x.category))].sort();cats.forEach(cat=>{const opt=document.createElement('option');opt.value=cat;opt.textContent=cat;sel.appendChild(opt)})}
function currentCategories(){const sel=byId('category');const vals=[...sel.selectedOptions].map(o=>o.value);return vals.length?vals:[...new Set(app.data.questions.map(x=>x.category))]}
function pickQuestion(){const cats=currentCategories();let pool=app.data.questions.filter(q=>cats.includes(q.category));const prof=app.profile;if(!prof)return null;if(byId('onlyWrong').checked){pool=pool.filter(q=>prof.wrongIds.includes(q.id))}else{pool=pool.filter(q=>!prof.seenQ.includes(q.id))}
if(!pool.length){byId('pool-modal').showModal();byId('pool-reset').onclick=()=>{prof.seenQ=prof.seenQ.filter(id=>!app.data.questions.some(q=>q.id===id&&cats.includes(q.category)));saveAll();byId('pool-modal').close();const q=pickQuestion();if(q)renderQuestion(q)};return null}
const weights=pool.map(q=>prof.wrongIds.includes(q.id)?3:1);let r=Math.random()*weights.reduce((a,b)=>a+b,0);for(let i=0;i<pool.length;i++){if((r-=weights[i])<0)return pool[i]}return pool[0]}
function renderQuestion(q){app.current=q;byId('q-id').textContent=q.id;byId('q-cat').textContent=q.category;byId('q-text').textContent=q.prompt;const ul=byId('choices');ul.innerHTML='';['A','B','C','D'].forEach(k=>{const li=document.createElement('li');li.className='choice';li.dataset.choice=k;li.textContent=`${k}) ${q['choice_'+k.toLowerCase()]}`;li.onclick=onChoice;ul.appendChild(li)});byId('explanation').textContent=q.explanation||'';setHidden(byId('explanation'),true);setHidden(byId('quiz-card'),false);setHidden(byId('info-card'),true)}
function onChoice(e){const choice=e.currentTarget.dataset.choice;const q=app.current;const prof=app.profile;if(!prof)return;if(!prof.seenQ.includes(q.id))prof.seenQ.push(q.id);document.querySelectorAll('.choice').forEach(li=>{const ok=(li.dataset.choice===q.correct);li.classList.toggle('correct',ok);if(li.dataset.choice===choice&&!ok)li.classList.add('wrong');li.onclick=null});prof.stats.total+=1;if(choice===q.correct){prof.stats.correct+=1;prof.stats.streak+=1;prof.wrongIds=prof.wrongIds.filter(id=>id!==q.id)}else{prof.stats.streak=0;if(!prof.wrongIds.includes(q.id))prof.wrongIds.push(q.id)};const c=q.category;const s=prof.stats;s.cats[c]=s.cats[c]||{t:0,c:0};s.cats[c].t+=1;s.cats[c].c+=(choice===q.correct?1:0);saveAll();setHidden(byId('explanation'),false);refreshStats()}
function refreshStats(){const prof=app.profile;if(!prof)return;byId('st-total').textContent=prof.stats.total;byId('st-correct').textContent=prof.stats.correct;byId('st-acc').textContent=prof.stats.total?Math.round(100*prof.stats.correct/prof.stats.total)+'%':'0%';byId('st-streak').textContent=prof.stats.streak;const ul=byId('st-cats');ul.innerHTML='';Object.entries(prof.stats.cats).forEach(([cat,v])=>{const li=document.createElement('li');const acc=v.t?Math.round(100*v.c/v.t):0;li.textContent=`${cat}: ${v.c}/${v.t} (${acc}%)`;ul.appendChild(li)})}
function pickInfo(){const cats=currentCategories();const prof=app.profile;if(!prof)return null;let pool=app.data.info.filter(x=>!x.category||cats.includes(x.category)).filter(x=>!prof.seenI.includes(x.id));if(!pool.length){prof.seenI=prof.seenI.filter(id=>!app.data.info.some(x=>x.id===id&&(!x.category||cats.includes(x.category))));saveAll();pool=app.data.info.filter(x=>!x.category||cats.includes(x.category))}return pool[Math.floor(Math.random()*pool.length)]}
function renderInfo(item){if(!item)return;const prof=app.profile;if(prof&&!prof.seenI.includes(item.id)){prof.seenI.push(item.id);saveAll()}byId('info-cat').textContent=item.category||'';byId('info-text').textContent=item.title;byId('info-extra').textContent=item.text||'';setHidden(byId('quiz-card'),true);setHidden(byId('info-card'),false)}
function handleFileImport(files){[...files].forEach(file=>{const reader=new FileReader();reader.onload=()=>{if(file.name.endsWith('.json')){try{const obj=JSON.parse(reader.result);if(obj.questions)app.data.questions=app.data.questions.concat(obj.questions);if(obj.info)app.data.info=app.data.info.concat(obj.info);fillCategorySelect();alert(`${file.name}: yüklendi.`)}catch(e){alert(`${file.name}: JSON hatası`)}}else if(file.name.endsWith('.csv')){const text=reader.result;const rows=parseCSV(text);const qs=rowsToQuestions(rows);app.data.questions=app.data.questions.concat(qs);fillCategorySelect();alert(`${file.name}: ${qs.length} soru eklendi.`)}};reader.readAsText(file,'utf-8')})}
function parseCSV(text){const lines=text.replace(/\r/g,'').split('\n').filter(x=>x.trim().length);const header=lines.shift().split(',').map(s=>s.trim());return lines.map(line=>{const cols=splitCSV(line);const obj={};header.forEach((h,i)=>obj[h]=cols[i]||'');return obj})}
function splitCSV(line){const out=[];let cur='';let q=false;for(let i=0;i<line.length;i++){const ch=line[i];if(ch=='"'){q=!q;continue}if(ch==','&&!q){out.push(cur);cur=''}else{cur+=ch}}out.push(cur);return out.map(x=>x.trim())}
function rowsToQuestions(rows){return rows.map(r=>({id:r.id||`CSV-${Math.random().toString(36).slice(2,8)}`,category:r.category||'Genel',prompt:r.prompt||'',choice_a:r.choice_a||'',choice_b:r.choice_b||'',choice_c:r.choice_c||'',choice_d:r.choice_d||'',correct:(r.correct||'A').toUpperCase(),explanation:r.explanation||'',}))}
window.addEventListener('DOMContentLoaded',async()=>{loadAll();byId('switch-user').onclick=promptUser;if(!app.user){promptUser()}byId('file-input').addEventListener('change',(e)=>handleFileImport(e.target.files));await loadData();byId('btn-new').onclick=()=>{const q=pickQuestion();if(q)renderQuestion(q)};byId('btn-reveal').onclick=()=>byId('explanation').classList.remove('hidden');byId('btn-next').onclick=()=>{const q=pickQuestion();if(q)renderQuestion(q)};byId('mode-quiz').onclick=()=>{document.querySelectorAll('nav .tab').forEach(b=>b.classList.remove('active'));byId('mode-quiz').classList.add('active');const q=pickQuestion();if(q)renderQuestion(q)};byId('mode-info').onclick=()=>{document.querySelectorAll('nav .tab').forEach(b=>b.classList.remove('active'));byId('mode-info').classList.add('active');renderInfo(pickInfo())};byId('btn-info-next').onclick=()=>renderInfo(pickInfo());byId('reset-stats').onclick=()=>{if(!app.profile)return;if(confirm('İstatistikler sıfırlansın mı?')){app.profile.stats={total:0,correct:0,streak:0,cats:{}};app.profile.wrongIds=[];saveAll();refreshStats()}};const q=pickQuestion();if(q)renderQuestion(q);else renderInfo(pickInfo())});